plugins {
  id 'war'
  id 'net.wasdev.wlp.gradle.plugins.Liberty' version '2.6.3'
  id 'com.palantir.docker' version '0.21.0'
  id 'com.palantir.docker-run' version '0.21.0'
}

group = 'org.aguibert'
version = '1.0-SNAPSHOT'
description = "Basic Liberty repo"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
	providedCompile 'javax:javaee-api:8.0'
	providedCompile 'org.eclipse.microprofile:microprofile:2.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.eclipse', name: 'yasson', version: '1.0.3'
    testCompile group: 'org.glassfish', name: 'javax.json', version: '1.1.4'
    testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.10.6'
    testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.26'
    testCompile group: 'org.apache.cxf', name: 'cxf-rt-rs-client', version: '3.3.0'
    testCompile group: 'cglib', name: 'cglib-nodep', version: '3.2.10'
    testCompile group: 'org.apache.cxf', name: 'cxf-rt-rs-extension-providers', version: '3.3.0'
    libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '19.0.0.1'
}

ext {
	httpPort = 8080
	httpsPort = 8443
	appUrl = 'http://localhost:8080/basic-liberty-1.0-SNAPSHOT/'
}

liberty {
	server {
		name = rootProject.name + 'Server'
		dropins = [war]
		bootstrapProperties = ['httpPort': httpPort, 'httpsPort': httpsPort]
		configDirectory = file('src/main/liberty/config')
	}
    install {
        //runtimeUrl = "https://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/downloads/wlp/beta/wlp-beta-2017.12.0.0.zip"
    }
}

task dockerCopyApp(type: Copy) {
  dependsOn war
  shouldRunAfter dockerClean
  from tasks.war.outputs
  into 'build/docker/build/libs'
}

task dockerCopyLibertyConfig(type: Copy) {
  shouldRunAfter dockerClean
  from liberty.server.configDirectory
  into 'build/docker/src/main/liberty/config'
}

dockerPrepare {
    dependsOn dockerCopyApp, dockerCopyLibertyConfig
}

docker {
    name rootProject.name
}

dockerRun {
    //dependsOn dockerStop, dockerRemoveContainer
    name rootProject.name + '-container'
    image rootProject.name
    ports "${httpPort}:9080", "${httpsPort}:9443"
}

dockerRemoveContainer.dependsOn 'dockerStop'
tasks.dockerRun.dependsOn 'dockerRemoveContainer'

task openBrowser {
    description = "Open browser to ${appUrl}"
    doLast {
        java.awt.Desktop.desktop.browse "${appUrl}".toURI()
    }
}

clean.dependsOn 'libertyStop'
libertyPackage.dependsOn 'libertyStop'
libertyStart.dependsOn 'libertyStop'
libertyRun.dependsOn 'libertyStop'
libertyStart.doLast {
	println "Application available at: ${appUrl}"
}

libertyStart.dependsOn 'libertyStop'
libertyRun.dependsOn 'libertyStop'

task start { dependsOn 'libertyStart' }
task stop  { dependsOn 'libertyStop' }

task integrationTest { dependsOn 'war', 'docker', 'test' }

