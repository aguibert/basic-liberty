apply plugin: 'war'
apply plugin: 'liberty'

group = 'org.aguibert'
version = '1.0-SNAPSHOT'
description = "Basic Liberty repo"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.openliberty.tools:liberty-gradle-plugin:3.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
	providedCompile 'javax:javaee-api:8.0'
	providedCompile 'org.eclipse.microprofile:microprofile:2.1'
	testCompile 'org.microshed:microshed-testing-liberty:0.6.2'
	testCompile 'org.slf4j:slf4j-log4j12:1.7.29'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '20.0.0.2'
}

ext {
	appUrl = 'http://localhost:8080/basic-liberty/'
}

liberty {
	server {
		name = rootProject.name + 'Server'
		deploy.dropins = [war]
		configDirectory = file('src/main/liberty/config')
	}
    install {
        //baseDir = '/Users/aguibert/dev/git/open-liberty/dev/build.image'
        //runtimeUrl = "https://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/downloads/wlp/beta/wlp-beta-2017.12.0.0.zip"
    }
}

task openBrowser {
    description = "Open browser to ${appUrl}"
    doLast {
        java.awt.Desktop.desktop.browse "${appUrl}".toURI()
    }
}

clean.dependsOn 'libertyStop'
libertyPackage.dependsOn 'libertyStop'
libertyStart.dependsOn 'libertyStop'
libertyRun.dependsOn 'libertyStop'
libertyStart.doLast {
	println "Application available at: ${appUrl}"
}

libertyStart.dependsOn 'libertyStop'
libertyRun.dependsOn 'libertyStop'

task start { dependsOn 'libertyStart' }
task stop  { dependsOn 'libertyStop' }

war.archiveName rootProject.name + '.war'
test {
    dependsOn 'war'
    defaultCharacterEncoding = "UTF-8"
    useJUnitPlatform()
    testLogging {
        displayGranularity 1
        showStandardStreams = true
        showStackTraces = true
        exceptionFormat = 'full'
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
    //systemProperty "microshed_hostname", "localhost"
    //systemProperty "microshed_http_port", "8080"
    //systemProperty "microshed_https_port", "8443"
}

