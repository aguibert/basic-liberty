apply plugin: 'war'
apply plugin: 'liberty'

group = 'org.aguibert'
version = '1.0-SNAPSHOT'
description = "Basic Liberty repo"

sourceCompatibility = 14
targetCompatibility = 14

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    //inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath,
            '--enable-preview'
        ]
        classpath = files()  
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.openliberty.tools:liberty-gradle-plugin:3.0'
    }
}

repositories {
    mavenCentral()
}

configurations {
    serverLibs
}

dependencies {
	//compileOnly 'org.apache.derby:derby:10.14.1.0'
    compileOnly group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    compileOnly group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compileOnly group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    compileOnly group: 'javax.enterprise', name: 'cdi-api', version: '2.0'
    compileOnly group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    compileOnly group: 'javax.transaction', name: 'javax.transaction-api', version: '1.3'
	//compileOnly 'javax:javaee-api:8.0'
    libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '20.0.0.3'
    serverLibs group: 'org.apache.derby', name: 'derby', version: '10.14.2.0' // '10.15.1.3'
}

ext {
	appUrl = 'http://localhost:9080/basic-liberty/'
}

liberty {
	server {
		name = rootProject.name + 'Server'
                deploy {
                    dropins = [war]
		}
                stripVersion = true
	}
    installDir = "/Users/aguibert/dev/git/open-liberty/dev/build.image/wlp/"
}

task copyServerLibs(type: Copy) {
    from configurations.serverLibs
    into "/Users/aguibert/dev/git/open-liberty/dev/build.image/wlp/usr/servers/${rootProject.name}Server/lib"
}

task openBrowser {
    description = "Open browser to ${appUrl}"
    doLast {
        java.awt.Desktop.desktop.browse "${appUrl}".toURI()
    }
}

deploy.dependsOn 'copyServerLibs'
libertyPackage.dependsOn 'libertyStop', 'copyServerLibs'

clean.dependsOn 'libertyStop'
libertyPackage.dependsOn 'libertyStop'
libertyStart.dependsOn 'libertyStop'
libertyRun.dependsOn 'libertyStop'
libertyStart.doLast {
	println "Application available at: ${appUrl}"
}

libertyStart.dependsOn 'libertyStop'
libertyRun.dependsOn 'libertyStop'

task start { dependsOn 'libertyStart' }
task stop  { dependsOn 'libertyStop' }

